"""
Django settings for project

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1h07w#iq!h&_g$oahcj8*a@^4at$ollrgv3^dxr1qjl=9g+hj@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

SITE_ID = 1

INSTALLED_APPS = [
    'project.apps.ajax_utils_',
    'django.contrib.sitemaps',
    'project.apps.info',
    'project.apps.delete_app',
    'project.apps.search',
    'project.apps.myauth',

    'captcha',             #
    'django_countries',
    'social_django',
    'bootstrap4',
    'project.apps.autocomplete',
    'project.apps.chat',
    'project.apps.event_handler.apps.EventHandlerConfig',
    'project.apps.back_task.apps.BackTaskConfig',
    'project.apps.comments',
    'project.apps.like_dislike',
    'project.apps.ajax_utils',
    'project.apps.blog',
    'project.apps.account',
    'django.contrib.humanize',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'project.middleware.SimpleMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mysite',
        'USER': 'mysiteadmin',
        'PASSWORD': '1996',
        'TEST': {
            'CHARSET': 'utf8',
            'COLLATION': 'utf8_general_ci',
        }

    }

}



CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache',
        'LOCATION':'127.0.0.1:11211',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTHENTICATION_BACKENDS = (
'social_core.backends.vk.VKOAuth2',
'django.contrib.auth.backends.ModelBackend',
)

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'project.apps.myauth.utils.social_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

GOOGLE_RECAPTCHA_SECRET_KEY = '6LenZoQUAAAAAEK32pHfYCClLx0ypVm3p_fiJGRM'

SOCIAL_AUTH_VK_OAUTH2_KEY = '6779396'
SOCIAL_AUTH_VK_OAUTH2_SECRET = '2soVKpmPpEiL3nZ7XIhA'

SOCIAL_AUTH_URL_NAMESPACE = 'social'

LOGIN_REDIRECT_URL = '/'

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = False

USE_TZ = True

LANGUAGES = [
  ('ru', ('Russian')),
  ('en', ('English')),
]

LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = '/var/www/mysite.ru/static/'

MEDIA_ROOT = '/srv/WebProject/mysite/media/'

MEDIA_URL = 'http://localhost/media/'

SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'


AUTH_USER_MODEL = 'account.BlogUser'

LOGIN_URL = '/login/'


MAX_HEIGHT_HEAD = 250
MAX_WIDTH_HEAD = 1500
MAX_WIDTH_IMG = 565
MAX_HEIGHT_IMG = 600
MAX_POST_SIZE = 488

USER_ICON = (100, 100)

HOT_POST = 2

DEFAULT_USER_IMG = '/static/account/img/default_user.png'


#######  CHANNELS #################


ASGI_APPLICATION = "project.routing.application"


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}
######## Celery ####################


REDIS_HOST = '127.0.0.1'
REDIS_PORT = '6379'
CELERY_BROKER_URL = 'redis://' + REDIS_HOST + ':' + REDIS_PORT + '/0'

########### mail #######

DEFAULT_FROM_EMAIL = 'sup.signup@yahoo.com'#'info.signup@mail.ru'
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.mail.yahoo.com' #'smtp.mail.ru'
EMAIL_HOST_USER = 'sup.signup@yahoo.com'#'info.signup@mail.ru'
EMAIL_HOST_PASSWORD = '19960213Z26a'
EMAIL_PORT = 465

############ geo ##########

DEFAULT_GEO = 'RU'

GEOIP_COUNTRY = '/srv/WebProject/mysite/etc/geoip/GeoLite2-Country.mmdb'

GEOIP_CITY = '/srv/WebProject/mysite/etc/geoip/GeoLite2-City.mmdb'

GEOIP_PATH = '/srv/WebProject/mysite/etc/geoip'

DOMAIN = 'http://localhost/'

############## Logging ############
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    'root': {
        'handlers': ['log_file', 'error_log'],
        'level': 'INFO',
        'formatter': 'verbose',
    },

    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(name)s.%(funcName)s %(message)s'

        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },

    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
      'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },

    'handlers': {
        'log_file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'simple',
            'backupCount': 1,
            'maxBytes': 16*1000000,
            'filename': '/srv/WebProject/mysite/logs.log',
        },
        'error_log': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'verbose',
            'backupCount': 1,
            'maxBytes': 16 * 1000000,
            'filename': '/srv/WebProject/mysite/error.log',

        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'filters': ['require_debug_true']
        }

    },
    'loggers': {
        'django.request': {
            'handlers': ['log_file'],
            'level': 'INFO',
            'propagate': False,
        },

        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        }
        },
}

